# Creates a "$timestamp" variable from $msec removing the decimal part
map $msec $timestamp {
  ~(.*)\.(.*) $1$2;
}

# Defines the EMF custom log format
log_format emf '{"requestPath":"$request_uri","requestMethod":"$request_method","requestId":"$http_x_request_id","processPid":"$pid","responseStatus":"$status","userAgent":"$http_user_agent","referer":"$http_referer","_aws":{"Timestamp":$timestamp,"LogGroupName":"/ngweb/${ENVIRONMENT}/nginx/access","CloudWatchMetrics":[{"Dimensions":[],"Metrics":[{"Name":"UpstreamConnectTime","Unit":"Seconds"},{"Name":"UpstreamHeaderTime","Unit":"Seconds"},{"Name":"UpstreamResponseTime","Unit":"Seconds"},{"Name":"ResponseTime","Unit":"Seconds"},{"Name":"RequestSize","Unit":"Bytes"},{"Name":"BodySize","Unit":"Bytes"},{"Name":"ResponseSize","Unit":"Bytes"}],"Namespace":"/ngweb/${ENVIRONMENT}/nginx"}]},"UpstreamConnectTime":$upstream_connect_time,"UpstreamHeaderTime":$upstream_header_time,"UpstreamResponseTime":$upstream_response_time,"ResponseTime":$request_time,"RequestSize":$request_length,"BodySize":$body_bytes_sent,"ResponseSize":$bytes_sent}';

error_log  /var/log/nginx/error.log ${ERROR_LOG_LEVEL};
access_log /var/log/nginx/access.log emf;

server {
  listen 7080 default;
  server_name _;

  location /status {
    proxy_pass http://127.0.0.1:3000;
  }
}

server {
  listen 7443 ssl http2;
  server_name _;

  gzip on;
  gzip_vary on;
  gzip_proxied private no-cache no-store;

  server_tokens off;

  ssl_certificate     /etc/pki/tls/certs/service.crt;
  ssl_certificate_key /etc/pki/tls/private/service.key;
  ssl_client_certificate /etc/pki/tls/certs/client.crt;

  ssl_verify_client off;
  ssl_verify_depth 3;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
  ssl_prefer_server_ciphers on;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 5m;

  underscores_in_headers on;

  location ~ ^(?<no_trailing_slash>/.*)/$ {
    add_header Cache-Control "public, max-age=3600";
    return 301 https://$the_host$no_trailing_slash;
  }

  location / {
    proxy_pass http://127.0.0.1:3000;

    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;

    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        'upgrade';
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-NginX-Proxy     true;
  }
}